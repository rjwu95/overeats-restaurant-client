{"version":3,"sources":["socketIoClient.js","App.js","inputDash.js","Signup.js","index.js"],"names":["socket","socketIoClient","App","state","email","password","isLogin","JSON","parse","localStorage","getItem","restaurantKey","orderData","baseUrl","logout","setItem","disconnect","console","log","_this","setState","signin","_callee","_this$state","regenerator_default","a","wrap","_context","prev","next","abrupt","alert","axios","post","headers","Content-Type","then","res","data","restaurantName","window","location","href","catch","err","stop","this","_totalPrice","element","orderList","reduce","acc","curr","Number","price","slice","length","split","filter","el","join","number","targetValue","e","name","Object","defineProperty","target","value","order","_callee2","order_id","restaurant_id","_context2","parentNode","childNodes","textContent","sent","get","concat","objectSpread","_this2","on","toConsumableArray","_this3","react_default","createElement","className","onClick","style","fontSize","padding","map","index","key","address","date","i","menu","marginLeft","phoneNumber","color","type","onChange","placeholder","Component","inputDash","str","replace","splice","Signup","confirmPassword","visible","register","Redirect","to","width","height","onBlur","textAlign","isNaN","_this2$state","message","response","status","marginTop","routing","BrowserRouter","display","flexDirection","boxShadow","Link","textDecoration","borderColor","borderWidth","Route","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"6TAEaA,QAASC,GAAe,8BC8ItBC,qNA1IbC,MAAQ,CACNC,MAAO,GACPC,SAAU,GACVC,QAASC,KAAKC,MAAMC,aAAaC,QAAQ,YACzCC,cAAeF,aAAaC,QAAQ,iBACpCE,UAAW,MAEbC,QAAU,+BAcVC,OAAS,WACPL,aAAaM,QAAQ,WAAW,GAChCf,EAAOgB,WAAW,aAAc,kBAAMC,QAAQC,IAAI,oBAClDC,EAAKC,SAAS,CAAEd,SAAS,OAG3Be,4BAAS,SAAAC,IAAA,IAAAC,EAAAnB,EAAAC,EAAAQ,EAAA,OAAAW,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAN,EACmBJ,EAAKhB,MAAzBC,EADCmB,EACDnB,MAAOC,EADNkB,EACMlB,SACC,KAAVD,GAA6B,KAAbC,EAFb,CAAAsB,EAAAE,KAAA,eAAAF,EAAAG,OAAA,SAGEC,MAAM,4FAHR,cAIHlB,EAAUM,EAAKN,QAJZc,EAAAE,KAAA,EAKDG,IACHC,KACCpB,EAAU,gBACV,CAAET,QAAOC,YACT,CAAE6B,QAAS,CAAEC,eAAgB,sBAE9BC,KAAK,SAAAC,GACJpB,QAAQC,IAAImB,GACZlB,EAAKC,SAAS,CAAET,cAAe0B,EAAIC,KAAK3B,gBACxCF,aAAaM,QAAQ,gBAAiBsB,EAAIC,KAAK3B,eAC/CF,aAAaM,QAAQ,iBAAkBsB,EAAIC,KAAKC,gBAChD9B,aAAaM,QAAQ,WAAW,GAChCI,EAAKC,SAAS,CAAEd,SAAS,IACzBkC,OAAOC,SAASC,KAAO,MAExBC,MAAM,SAAAC,GAAG,OAAIb,MAAM,kGApBf,wBAAAJ,EAAAkB,SAAAvB,EAAAwB,WAuBTC,YAAc,SAAAC,GAAO,OACnBA,EAAQC,UAAUC,OAChB,SAACC,EAAKC,GAAN,OACED,EACAE,OACED,EAAKE,MACFC,MAAM,EAAGH,EAAKE,MAAME,OAAS,GAC7BC,MAAM,IACNC,OAAO,SAAAC,GAAE,MAAW,MAAPA,IACbC,KAAK,KAERR,EAAKS,QACT,MAGJC,YAAc,SAACC,EAAGC,GAChB7C,EAAKC,SAAL6C,OAAAC,EAAA,EAAAD,CAAA,GACGD,EAAOD,EAAEI,OAAOC,WAGrBC,4CAAQ,SAAAC,EAAMP,GAAN,IAAAQ,EAAAC,EAAA,OAAAhD,EAAAC,EAAAC,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cAEA0C,EAAWR,EAAEI,OAAOO,WAAWC,WAAW,GAAGC,YAAYrB,MAAM,GAF/DkB,EAAA5C,KAAA,EAGsBpB,aAAaC,QAAQ,iBAH3C,OAGA8D,EAHAC,EAAAI,KAIJ7C,IAAM8C,IACJ3D,EAAKN,QAAL,yBAAAkE,OAAwCP,EAAxC,KAAAO,OAAyDR,IAE3DpD,EAAKC,SAAL6C,OAAAe,EAAA,EAAAf,CAAA,GACK9C,EAAKhB,MADV,CAEES,UAAWO,EAAKhB,MAAMS,UAAU8C,OAAO,SAAAC,GAAE,OAAIA,EAAGY,WAAaA,OAT3D,wBAAAE,EAAA5B,SAAAyB,EAAAxB,kJA7DY,IAAAmC,EAAAnC,KAClB7B,QAAQC,IAAI,YACZlB,EAAOkF,GAAGzE,aAAaC,QAAQ,iBAAkB,SAAA2D,GAC/CtC,MAAM,iDACNkD,EAAK7D,SAAL6C,OAAAe,EAAA,EAAAf,CAAA,GACKgB,EAAK9E,MADV,CAEES,UAAS,CAAGyD,GAAHU,OAAAd,OAAAkB,EAAA,EAAAlB,CAAagB,EAAK9E,MAAMS,kDAoE9B,IAAAwE,EAAAtC,KACP,OAAOA,KAAK3C,MAAMG,QAChB+E,EAAA5D,EAAA6D,cAAA,OAAKC,UAAU,SACbF,EAAA5D,EAAA6D,cAAA,YAAO7E,aAAaC,QAAQ,mBAD9B,+CAEE2E,EAAA5D,EAAA6D,cAAA,UAAQE,QAAS1C,KAAKhC,QAAtB,4BACAuE,EAAA5D,EAAA6D,cAAA,OAAKG,MAAO,CAAEC,SAAU,MAAOC,QAAS,QAAUJ,UAAU,aAC1DF,EAAA5D,EAAA6D,cAAA,WACAD,EAAA5D,EAAA6D,cAAA,4CACCxC,KAAK3C,MAAMS,UAAUgF,IAAI,SAACjC,EAAIkC,GAAL,OACxBR,EAAA5D,EAAA6D,cAAA,OAAKQ,IAAKD,EAAON,UAAU,aACzBF,EAAA5D,EAAA6D,cAAA,uCAAW3B,EAAGY,UACdc,EAAA5D,EAAA6D,cAAA,2BAAS3B,EAAGoC,SACZV,EAAA5D,EAAA6D,cAAA,uCAAW3B,EAAGqC,MACdX,EAAA5D,EAAA6D,cAAA,uCACQ,IACL3B,EAAGV,UAAU2C,IAAI,SAACjC,EAAIsC,GAAL,OAChBZ,EAAA5D,EAAA6D,cAAA,OAAKQ,IAAKG,GACRZ,EAAA5D,EAAA6D,cAAA,YAAO3B,EAAGuC,MACVb,EAAA5D,EAAA6D,cAAA,QAAMG,MAAO,CAAEU,WAAY,KAA3B,IAAmCxC,EAAGE,OAAtC,UACAwB,EAAA5D,EAAA6D,cAAA,QAAMG,MAAO,CAAEU,WAAY,KAA3B,IAAmCxC,EAAGL,WAI5C+B,EAAA5D,EAAA6D,cAAA,gCAEGF,EAAKrC,YAAYY,GAFpB,UAIA0B,EAAA5D,EAAA6D,cAAA,0DAAe3B,EAAGyC,aAClBf,EAAA5D,EAAA6D,cAAA,UACEE,QAASJ,EAAKf,OADhB,iCAWRgB,EAAA5D,EAAA6D,cAAA,OAAKC,UAAU,UACbF,EAAA5D,EAAA6D,cAAA,MAAIG,MAAO,CAAEY,MAAO,SAApB,oFACC,CAAC,QAAS,YAAYT,IAAI,SAAAjC,GAAE,OAC3B0B,EAAA5D,EAAA6D,cAAA,SACEgB,KAAa,aAAP3C,EAAoBA,EAAK,OAC/B4C,SAAU,SAAAxC,GAAC,OAAIqB,EAAKtB,YAAYC,EAAGJ,IACnC6C,YAAa7C,EACbmC,IAAKnC,MAGT0B,EAAA5D,EAAA6D,cAAA,UAAQE,QAAS1C,KAAKzB,QAAtB,8BArIUoF,uBCLLC,EAAY,SAAAC,GACvB,IAAIP,EAAcO,EACfC,QAAQ,MAAO,IACfA,QAAQ,MAAO,IACfnD,MAAM,IAWT,MATuB,MAAnB2C,EAAY,IACdA,EAAYS,OAAO,EAAG,EAAG,KACzBT,EAAYS,OAAO,EAAG,EAAG,KACzBT,EAAcA,EAAYxC,KAAK,MAE/BwC,EAAYS,OAAO,EAAG,EAAG,KACzBT,EAAYS,OAAO,EAAG,EAAG,KACzBT,EAAcA,EAAYxC,KAAK,KAE1BwC,GCgJMU,6MA1Jb3G,MAAQ,CACNC,MAAO,GACPC,SAAU,GACV2D,KAAM,GACNoC,YAAa,GACbW,iBAAiB,EACjBC,SAAS,EACTC,UAAU,2EAEH,IAAAhC,EAAAnC,KACP,OAAKA,KAAK3C,MAAM8G,SA2IP5B,EAAA5D,EAAA6D,cAAC4B,EAAA,EAAD,CAAUC,GAAG,MAzIlB9B,EAAA5D,EAAA6D,cAAA,OACEG,MAAO,CACL2B,MAAO,MACPjB,WAAY,QAGdd,EAAA5D,EAAA6D,cAAA,SACEiB,SAAU,SAAAxC,GAAC,OACTkB,EAAK7D,SAAS,CACZhB,MAAO2D,EAAEI,OAAOC,SAGpBqB,MAAO,CAAE4B,OAAQ,IACjBb,YAAY,UAEdnB,EAAA5D,EAAA6D,cAAA,SACEiB,SAAU,SAAAxC,GAAC,OACTkB,EAAK7D,SAAS,CACZf,SAAU0D,EAAEI,OAAOC,SAGvBqB,MAAO,CAAE4B,OAAQ,IACjBb,YAAY,WACZF,KAAK,aAEPjB,EAAA5D,EAAA6D,cAAA,WACED,EAAA5D,EAAA6D,cAAA,SACEiB,SAAU,SAAAxC,GACRkB,EAAK7D,SAAS,CACZ2F,gBAAiBhD,EAAEI,OAAOC,QAAUa,EAAK9E,MAAME,YAGnDoF,MAAO,CAAE4B,OAAQ,IACjBC,OAAQ,WACNrC,EAAK7D,SAAS,CAAE4F,SAAS,KAE3BR,YAAY,mBACZF,KAAK,aAENxD,KAAK3C,MAAM6G,QACVlE,KAAK3C,MAAM4G,gBACT1B,EAAA5D,EAAA6D,cAAA,OACEG,MAAO,CACLY,MAAO,QACPX,SAAU,QACV6B,UAAW,WAJf,iEAUAlC,EAAA5D,EAAA6D,cAAA,OACEG,MAAO,CACLY,MAAO,MACPX,SAAU,QACV6B,UAAW,WAJf,oFAWFlC,EAAA5D,EAAA6D,cAAA,aAGJD,EAAA5D,EAAA6D,cAAA,SACEiB,SAAU,SAAAxC,GAAC,OACTkB,EAAK7D,SAAS,CACZ4C,KAAMD,EAAEI,OAAOC,SAGnBqB,MAAO,CAAE4B,OAAQ,IACjBb,YAAY,SAEdnB,EAAA5D,EAAA6D,cAAA,SACEgC,OAAQ,SAAAvD,GAAC,OACPkB,EAAK7D,SAAS,CACZgF,YAAaM,EACX3C,EAAEI,OAAOC,MACNX,MAAM,IACNC,OAAO,SAAAC,GAAE,OAAK6D,MAAMnE,OAAOM,MAC3BC,KAAK,QAId6B,MAAO,CAAE4B,OAAQ,IAEjBb,YAAY,gBAEdnB,EAAA5D,EAAA6D,cAAA,UACEE,QAAS,WAAM,IAAAiC,EAOTxC,EAAK9E,MAPIsH,EAEXrH,MAFWqH,EAGXpH,SAHWoH,EAIXV,gBAJWU,EAKXzD,KAGF,GAKkB,KAbLyD,EAMXrB,YASA,OAAOrE,MAAM,yEACfC,IACGC,KAAK,0CAA2CgD,EAAK9E,MAAO,CAC3D+B,QAAS,CAAEC,eAAgB,sBAE5BC,KAAK,SAAAC,GACJN,MAAM,mCACNkD,EAAK7D,SAAS,CACZ6F,UAAU,MAGbtE,MAAM,SAASC,GACd3B,QAAQC,IAAI0B,EAAI8E,SACY,MAAxB9E,EAAI+E,SAASC,OACf7F,MAAM,8EAC2B,MAAxBa,EAAI+E,SAASC,QACtB7F,MAAM,2EAId0D,MAAO,CACL2B,MAAO,MACPC,OAAQ,GACRQ,UAAW,GACX1B,WAAY,QAxChB,wBAtGWM,aCCfqB,EACJzC,EAAA5D,EAAA6D,cAACyC,EAAA,EAAD,KACE1C,EAAA5D,EAAA6D,cAAA,WACED,EAAA5D,EAAA6D,cAAA,OACEG,MAAO,CACLuC,QAAS,OACTC,cAAe,cACftC,QAAS,MACTuC,UAAW,qBAGb7C,EAAA5D,EAAA6D,cAAC6C,EAAA,EAAD,CACEhB,GAAG,IACH1B,MAAO,CAAEE,QAAS,OAAQU,MAAO,UAAW+B,eAAgB,SAF9D,QAMA/C,EAAA5D,EAAA6D,cAAC6C,EAAA,EAAD,CACEhB,GAAG,UACH1B,MAAO,CACLU,WAAY,GACZkC,YAAa,QACbC,YAAa,GACb3C,QAAS,OACTU,MAAO,UACP+B,eAAgB,SARpB,WAcF/C,EAAA5D,EAAA6D,cAACiD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxI,IACjCmF,EAAA5D,EAAA6D,cAACiD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAW5B,MAI7C6B,IAASC,OAAOd,EAASe,SAASC,eAAe","file":"static/js/main.44407d23.chunk.js","sourcesContent":["import socketIoClient from 'socket.io-client';\n\nexport const socket = socketIoClient('http://54.180.102.251:8080');\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { socket } from './socketIoClient';\nimport './style.css';\n\nclass App extends Component {\n  state = {\n    email: '',\n    password: '',\n    isLogin: JSON.parse(localStorage.getItem('isLogin')),\n    restaurantKey: localStorage.getItem('restaurant_id'),\n    orderData: []\n  };\n  baseUrl = 'http://54.180.102.251:8080';\n\n  componentDidMount() {\n    console.log('didmount');\n    socket.on(localStorage.getItem('restaurant_id'), order => {\n      alert('새 주문이 왔어요!');\n      this.setState({\n        ...this.state,\n        orderData: [order, ...this.state.orderData]\n      });\n      // console.log(this.state);\n    });\n  }\n\n  logout = () => {\n    localStorage.setItem('isLogin', false);\n    socket.disconnect('disconnect', () => console.log('끊김..'));\n    this.setState({ isLogin: false });\n  };\n\n  signin = async () => {\n    let { email, password } = this.state;\n    if (email === '' || password === '')\n      return alert('아이디와 비밀번호를 적어주세요!');\n    let baseUrl = this.baseUrl;\n    await axios\n      .post(\n        baseUrl + '/users/signin',\n        { email, password },\n        { headers: { 'Content-Type': 'application/json' } }\n      )\n      .then(res => {\n        console.log(res);\n        this.setState({ restaurantKey: res.data.restaurantKey });\n        localStorage.setItem('restaurant_id', res.data.restaurantKey);\n        localStorage.setItem('restaurantName', res.data.restaurantName);\n        localStorage.setItem('isLogin', true);\n        this.setState({ isLogin: true });\n        window.location.href = '/';\n      })\n      .catch(err => alert('아이디나 비밀번호를 확인해주세요'));\n  };\n\n  _totalPrice = element =>\n    element.orderList.reduce(\n      (acc, curr) =>\n        acc +\n        Number(\n          curr.price\n            .slice(0, curr.price.length - 1)\n            .split('')\n            .filter(el => el !== ',')\n            .join('')\n        ) *\n          curr.number,\n      0\n    );\n\n  targetValue = (e, name) => {\n    this.setState({\n      [name]: e.target.value\n    });\n  };\n  order = async e => {\n    {\n      let order_id = e.target.parentNode.childNodes[0].textContent.slice(6);\n      let restaurant_id = await localStorage.getItem('restaurant_id');\n      axios.get(\n        this.baseUrl + `/restaurants/delivery/${restaurant_id}/${order_id}`\n      );\n      this.setState({\n        ...this.state,\n        orderData: this.state.orderData.filter(el => el.order_id !== order_id)\n      });\n    }\n  };\n  render() {\n    return this.state.isLogin ? (\n      <div className=\"login\">\n        <span>{localStorage.getItem('restaurantName')}</span>의 싸장님 페이지\n        <button onClick={this.logout}>로그아웃</button>\n        <div style={{ fontSize: '1em', padding: '30px' }} className=\"orderlist\">\n          <hr />\n          <h4>주문리스트</h4>\n          {this.state.orderData.map((el, index) => (\n            <div key={index} className=\"orderList\">\n              <h4>주문번호: {el.order_id}</h4>\n              <h4>주소: {el.address}</h4>\n              <h4>주문시간: {el.date}</h4>\n              <div>\n                주문내역:{' '}\n                {el.orderList.map((el, i) => (\n                  <div key={i}>\n                    <span>{el.menu}</span>\n                    <span style={{ marginLeft: 15 }}> {el.number}개</span>\n                    <span style={{ marginLeft: 15 }}> {el.price}</span>\n                  </div>\n                ))}\n              </div>\n              <p>\n                총 금액:\n                {this._totalPrice(el)}원\n              </p>\n              <div>주문자전화번호: {el.phoneNumber}</div>\n              <button\n                onClick={this.order}\n                // 아직 주문번호로 지우는 거 확인 못했음. 내일 꼭 확인하기 받아오는 데이터도 한번더 확인\n              >\n                배달완료\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    ) : (\n      <div className=\"logout\">\n        <h2 style={{ color: '#ddd' }}>식당아이디로 로그인 해주세요</h2>\n        {['email', 'password'].map(el => (\n          <input\n            type={el === 'password' ? el : 'text'}\n            onChange={e => this.targetValue(e, el)}\n            placeholder={el}\n            key={el}\n          />\n        ))}\n        <button onClick={this.signin}>로그인</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export const inputDash = str => {\r\n  let phoneNumber = str\r\n    .replace(/ /gi, '')\r\n    .replace(/-/gi, '')\r\n    .split('');\r\n\r\n  if (phoneNumber[2] !== '0') {\r\n    phoneNumber.splice(3, 0, '-');\r\n    phoneNumber.splice(7, 0, '-');\r\n    phoneNumber = phoneNumber.join('');\r\n  } else {\r\n    phoneNumber.splice(3, 0, '-');\r\n    phoneNumber.splice(8, 0, '-');\r\n    phoneNumber = phoneNumber.join('');\r\n  }\r\n  return phoneNumber;\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { inputDash } from './inputDash';\r\nclass Signup extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    name: '',\r\n    phoneNumber: '',\r\n    confirmPassword: false,\r\n    visible: false,\r\n    register: false,\r\n  };\r\n  render() {\r\n    if (!this.state.register) {\r\n      return (\r\n        <div\r\n          style={{\r\n            width: '50%',\r\n            marginLeft: '25%',\r\n          }}\r\n        >\r\n          <input\r\n            onChange={e =>\r\n              this.setState({\r\n                email: e.target.value,\r\n              })\r\n            }\r\n            style={{ height: 15 }}\r\n            placeholder=\"email\"\r\n          />\r\n          <input\r\n            onChange={e =>\r\n              this.setState({\r\n                password: e.target.value,\r\n              })\r\n            }\r\n            style={{ height: 15 }}\r\n            placeholder=\"password\"\r\n            type=\"password\"\r\n          />\r\n          <div>\r\n            <input\r\n              onChange={e => {\r\n                this.setState({\r\n                  confirmPassword: e.target.value === this.state.password,\r\n                });\r\n              }}\r\n              style={{ height: 15 }}\r\n              onBlur={() => {\r\n                this.setState({ visible: true });\r\n              }}\r\n              placeholder=\"confirm password\"\r\n              type=\"password\"\r\n            />\r\n            {this.state.visible ? (\r\n              this.state.confirmPassword ? (\r\n                <div\r\n                  style={{\r\n                    color: 'green',\r\n                    fontSize: '0.8em',\r\n                    textAlign: 'center',\r\n                  }}\r\n                >\r\n                  비밀번호가 일치합니다\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  style={{\r\n                    color: 'red',\r\n                    fontSize: '0.8em',\r\n                    textAlign: 'center',\r\n                  }}\r\n                >\r\n                  비밀번호가 일치하지 않습니다\r\n                </div>\r\n              )\r\n            ) : (\r\n              <div />\r\n            )}\r\n          </div>\r\n          <input\r\n            onChange={e =>\r\n              this.setState({\r\n                name: e.target.value,\r\n              })\r\n            }\r\n            style={{ height: 15 }}\r\n            placeholder=\"name\"\r\n          />\r\n          <input\r\n            onBlur={e =>\r\n              this.setState({\r\n                phoneNumber: inputDash(\r\n                  e.target.value\r\n                    .split('')\r\n                    .filter(el => !isNaN(Number(el)))\r\n                    .join(''),\r\n                ),\r\n              })\r\n            }\r\n            style={{ height: 15 }}\r\n            // value={this.state.phoneNumber}\r\n            placeholder=\"phoneNumber\"\r\n          />\r\n          <button\r\n            onClick={() => {\r\n              let {\r\n                email,\r\n                password,\r\n                confirmPassword,\r\n                name,\r\n                phoneNumber,\r\n              } = this.state;\r\n              if (\r\n                (email === '',\r\n                password === '',\r\n                confirmPassword === '',\r\n                name === '',\r\n                phoneNumber === '')\r\n              )\r\n                return alert('양식에 맞게 작성해주세요!');\r\n              axios\r\n                .post('http://54.180.102.251:8080/users/signup', this.state, {\r\n                  headers: { 'Content-Type': 'application/json' },\r\n                })\r\n                .then(res => {\r\n                  alert('안녕하세요!');\r\n                  this.setState({\r\n                    register: true,\r\n                  });\r\n                })\r\n                .catch(function(err) {\r\n                  console.log(err.message);\r\n                  if (err.response.status === 401) {\r\n                    alert('이미 가입된 전화번호입니다');\r\n                  } else if (err.response.status === 402) {\r\n                    alert('이미 가입된 이메일입니다');\r\n                  }\r\n                });\r\n            }}\r\n            style={{\r\n              width: '50%',\r\n              height: 40,\r\n              marginTop: 30,\r\n              marginLeft: '25%',\r\n            }}\r\n          >\r\n            등록\r\n          </button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Signup;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom';\r\nimport App from './App';\r\nimport Signup from './Signup';\r\nconst routing = (\r\n  <Router>\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'row-reverse',\r\n          padding: '5px',\r\n          boxShadow: '0px 2px 5px #111'\r\n        }}\r\n      >\r\n        <Link\r\n          to=\"/\"\r\n          style={{ padding: '10px', color: '#51cdca', textDecoration: 'none' }}\r\n        >\r\n          Home\r\n        </Link>\r\n        <Link\r\n          to=\"/signup\"\r\n          style={{\r\n            marginLeft: 20,\r\n            borderColor: 'black',\r\n            borderWidth: 0.5,\r\n            padding: '10px',\r\n            color: '#51cdca',\r\n            textDecoration: 'none'\r\n          }}\r\n        >\r\n          signup\r\n        </Link>\r\n      </div>\r\n      <Route exact path=\"/\" component={App} />\r\n      <Route exact path=\"/signup\" component={Signup} />\r\n    </div>\r\n  </Router>\r\n);\r\nReactDOM.render(routing, document.getElementById('root'));\r\n"],"sourceRoot":""}